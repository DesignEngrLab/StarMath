---
layout: post
title: Example 1
category: example
author: Matt Campbell

excerpt: How to invert a matrix with StarMath. 

---

The following simple example was created to test the speed and accuracy
of StarMath's matrix inversion capabilities. It is included within the
GÇ£tester.exeGÇ¥ project in the source code.-á

-á-á-á-á-á-á-á-á-á-á-á const int size = 500;

-á-á-á-á-á-á-á-á-á-á-á var now = DateTime.Now;

-á-á-á-á-á-á-á-á-á-á-á var r = new Random();

-á-á-á-á-á-á-á-á-á-á-á var A = new double[size,size];

-á-á-á-á-á-á-á-á-á-á-á for (var i = 0; i \< size; i++)

-á-á-á-á-á-á-á-á-á-á-á-á-á-á-á for (var j = 0; j \< size; j++)

-á-á-á-á-á-á-á-á-á-á-á-á-á-á-á-á-á-á-á A[i, j] = (200\*r.NextDouble()) - 100.0;

-á-á-á-á-á-á-á-á-á-á-á Console.WriteLine("start invert check for matrix of size:
" + size);

-á-á-á-á-á-á-á-á-á-á-á var B = A.inverse();-á // or-á-áStarMath.inverse(A);

-á-á-á-á-á-á-á-á-á-á-á var C = A.multiply(B).subtract(StarMath.makeIdentity(size));

-á-á-á-á-á-á-á-á-á-á-á var error = C.norm2();

-á-á-á-á-á-á-á-á-á-á-á var interval = DateTime.Now - now;

-á-á-á-á-á-á-á-á-á-á-á Console.WriteLine("end invert, error = " + error);

-á-á-á-á-á-á-á-á-á-á-á Console.WriteLine("time = " + interval);

-á

The following shows an explanation for these steps.

-á-á-á-á-á-á-á-á-á-á-á const int size = 500;

-á-á-á-á-á-á-á-á-á-á-á var now = DateTime.Now;

-á-á-á-á-á-á-á-á-á-á-á var r = new Random();

First, a matrix of 500 by 500 elements is created with values between
GÇô100 and 100.

-á-á-á-á-á-á-á-á-á-á-á var A = new double[size,size];

-á-á-á-á-á-á-á-á-á-á-á for (var i = 0; i \< size; i++)

-á-á-á-á-á-á-á-á-á-á-á-á-á-á-á for (var j = 0; j \< size; j++)

-á-á-á-á-á-á-á-á-á-á-á-á-á-á-á-á-á-á-á A[i, j] = (200\*r.NextDouble()) - 100.0;

-á-á-á-á-á-á-á-á-á-á-á Console.WriteLine("start invert check for matrix of size:
" + size);

B is assigned to the inverse of A (this is the most time consuming step,
of course). Note, in StarMath, most of the functions modify the original
values GÇô A is the same after this function call.

-á-á-á-á-á-á-á-á-á-á-á var B = StarMath.inverse(A); *or with extensions, this can
be made more compact:*

-á-á-á-á-á-á-á-á-á-á-á var B = A.inverse();

In order to test the accuracy of the inversion, A and B are multiply
(A\*A\^-1), which should yield the identity matrix. So, the identity
matrix is subtracted to produce a matrix, C, which would ideally be all
zeros.

-á-á-á-á-á-á-á-á-á-á-á var C = StarMath.subtract(StarMath.multiply(A, B),
StarMath.makeIdentity(size); *or with extensions, this can be compact:*

-á-á-á-á-á-á-á-á-á-á-á var-áC = A.multiply(B).subtract(StarMath.makeIdentity(size));

By taking the norm of matrix C, we can arrive at the root-mean-square
error. Note, the norm2-á and normP functions take an optional second
argument (not shown), which is a boolean (the default of which is false)
called dontDoPRoot. When this is true, the norm function skips the step
the sqaure-root (or p-root) is taken.

-á-á-á-á-á-á-á-á-á-á-á var error = StarMath.norm2(C); *or with extensions, this can
be :*

-á-á-á-á-á-á-á-á-á-á-á var-áerror = C.norm2();

-á

-á-á-á-á-á-á-á-á-á-á-á var interval = DateTime.Now - now;

-á-á-á-á-á-á-á-á-á-á-á Console.WriteLine("end invert, error = " + error);

-á-á-á-á-á-á-á-á-á-á-á Console.WriteLine("time = " + interval);

-á